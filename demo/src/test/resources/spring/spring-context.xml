<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 初始化生产者 -->
    <bean name="productConfig" class="com.system.kafka.clients.model.ProductConfig">
        <property name="bootstrapServers" value="10.0.21.56:9092,10.0.21.57:9092"/>
        <!--<property name="bootstrapServers" value="10.211.55.5:9092"/>-->
        <property name="acks" value="all"/>
        <property name="retries" value="0"/>
        <property name="batchSize" value="16384"/>
        <property name="bufferMemory" value="33554432"/>
        <property name="lingerMs" value="1"/>
    </bean>

    <bean name="producerFactory" class="com.system.kafka.clients.factory.ProducerFactory">
        <constructor-arg ref="productConfig"/>
    </bean>

    <bean name="productService" class="com.system.kafka.clients.ProductService">
        <property name="producerFactory" ref="producerFactory"/>
    </bean>

    <!-- 生产通道1 -->
    <bean name="producerHandler" class="com.system.kafka.clients.demo.handler.ProducerHandler">
        <property name="productService" ref="productService"/>
        <property name="topicName" value="my-topic"/>
    </bean>

    <!-- 生产通道2 -->
    <bean name="producerHandler2" class="com.system.kafka.clients.demo.handler.ProducerHandler">
        <property name="productService" ref="productService"/>
        <property name="topicName" value="my-topic1"/>
    </bean>

    <!-- 初始化消费者 -->
    <bean name="consumerConfig" class="com.system.kafka.clients.model.ConsumerConfig">
        <property name="bootstrapServers" value="10.0.21.56:9092,10.0.21.57:9092"/>
        <!--<property name="bootstrapServers" value="10.211.55.5:9092"/>-->
        <property name="groupId" value="test"/>
        <property name="enableAutoCommit" value="true"/>
        <property name="autoCommitIntervalMs" value="1000"/>
        <property name="sessionTimeoutMs" value="30000"/>
    </bean>

    <bean name="consumerFactory" class="com.system.kafka.clients.factory.ConsumerFactory">
        <constructor-arg ref="consumerConfig"/>
    </bean>

    <bean name="consumerServiceImpl" class="com.system.kafka.clients.ConsumerService">
        <property name="consumerFactory" ref="consumerFactory"/>
    </bean>

    <!-- 通过注解的形式,提供的消费者实例 -->
    <context:component-scan base-package="com.system.kafka.clients.demo"/>

    <bean name="consumerHandler" class="com.system.kafka.clients.demo.handler.ConsumerHandler" init-method="execute">
        <property name="consumerService" ref="consumerServiceImpl"/>
        <property name="topicName" value="my-topic"/>
        <!-- 消息传输对象 -->
        <property name="transObj" value="com.system.kafka.clients.demo.SayHello"/>
        <!-- 注入消息处理类对象 (需要你来进行扫描) -->
        <property name="receiptObj" ref="receiptDispatch"/>
    </bean>

</beans>